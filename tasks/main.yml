---
# Copyright 2018, taseer94@gmail.com
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- import_tasks: db_setup.yml
  when:
    - "inventory_hostname == ((groups['blazar_all'] | intersect(ansible_play_hosts)) | list)[0]"
  vars:
    _oslodb_setup_host: "{{ blazar_db_setup_host }}"
    _oslodb_databases:
      - name: "{{ blazar_galera_database }}"
        users:
          - username: "{{ blazar_galera_user }}"
            password: "{{ blazar_container_mysql_password }}"
  tags:
    - common-db
    - blazar-config

- include_tasks: mq_setup.yml
  when:
    - "inventory_hostname == ((groups['blazar_all'] | intersect(ansible_play_hosts)) | list)[0]"
  with_items:
    - oslomsg_setup_host: "{{ blazar_oslomsg_rpc_setup_host }}"
      oslomsg_userid: "{{ blazar_oslomsg_rpc_userid }}"
      oslomsg_password: "{{ blazar_oslomsg_rpc_password }}"
      oslomsg_vhost: "{{ blazar_oslomsg_rpc_vhost }}"
      oslomsg_transport: "{{ blazar_oslomsg_rpc_transport }}"
    - oslomsg_setup_host: "{{ blazar_oslomsg_notify_setup_host }}"
      oslomsg_userid: "{{ blazar_oslomsg_notify_userid }}"
      oslomsg_password: "{{ blazar_oslomsg_notify_password }}"
      oslomsg_vhost: "{{ blazar_oslomsg_notify_vhost }}"
      oslomsg_transport: "{{ blazar_oslomsg_notify_transport }}"
  tags:
    - blazar-config

- include_tasks: blazar_pre_install.yml
  tags:
    - blazar-install

- name: Install the python venv
  import_role:
    name: "python_venv_build"
  vars:
    venv_build_constraints: "{{ blazar_git_constraints }}"
    venv_build_distro_package_list: "{{ blazar_devel_distro_packages }}"
    venv_install_destination_path: "{{ blazar_bin | dirname }}"
    venv_install_distro_package_list: "{{ blazar_distro_packages }}"
    venv_pip_install_args: "{{ blazar_pip_install_args }}"
    venv_pip_packages: "{{ blazar_pip_packages }}"
    venv_facts_when_changed:
      - section: "blazar"
        option: "venv_tag"
        value: "{{ blazar_venv_tag }}"
  tags:
    - blazar-install

- include_tasks: blazar_post_install.yml
  tags:
    - blazar-config

- include_tasks: blazar_db_setup.yml
  when:
    - "inventory_hostname == ((groups['blazar_all'] | intersect(ansible_play_hosts)) | list)[0]"
  tags:
    - blazar-config

- name: Run the systemd service role
  include_role:
    name: systemd_service
  vars:
    systemd_user_name: "{{ blazar_system_user_name }}"
    systemd_group_name: "{{ blazar_system_group_name }}"
    systemd_tempd_prefix: openstack
    systemd_slice_name: blazar
    systemd_lock_path: /var/lock/blazar
    systemd_CPUAccounting: true
    systemd_BlockIOAccounting: true
    systemd_MemoryAccounting: true
    systemd_TasksAccounting: true
    systemd_services:
      - service_name: "{{ service_var.service_name }}"
        enabled: yes
        state: started
        execstarts: "{{ service_var.execstarts }}"
        execreloads: "{{ service_var.execreloads | default([]) }}"
        config_overrides: "{{ service_var.init_config_overrides }}"
  with_items: "{{ filtered_blazar_services }}"
  loop_control:
    loop_var: service_var
  tags:
    - blazar-config
    - systemd-service

- include_tasks: blazar_service_setup.yml
  when:
    - "inventory_hostname == ((groups['blazar_all'] | intersect(ansible_play_hosts)) | list)[0]"
  tags:
    - blazar-config
